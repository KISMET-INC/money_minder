// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using money_minder.Models;

namespace money_minder.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("money_minder.Models.AccountBalance", b =>
                {
                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Total");

                    b.ToTable("AccountBalances");
                });

            modelBuilder.Entity("money_minder.Models.Bill", b =>
                {
                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Company")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PaycheckPayDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Total");

                    b.HasIndex("PaycheckPayDate");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("money_minder.Models.BillHistory", b =>
                {
                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("SourceTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Total");

                    b.HasIndex("SourceTotal");

                    b.ToTable("BillHistories");
                });

            modelBuilder.Entity("money_minder.Models.Paycheck", b =>
                {
                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("From")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PayDate");

                    b.ToTable("Paychecks");
                });

            modelBuilder.Entity("money_minder.Models.Bill", b =>
                {
                    b.HasOne("money_minder.Models.Paycheck", null)
                        .WithMany("PlannedBills")
                        .HasForeignKey("PaycheckPayDate");
                });

            modelBuilder.Entity("money_minder.Models.BillHistory", b =>
                {
                    b.HasOne("money_minder.Models.Bill", "Source")
                        .WithMany("Histories")
                        .HasForeignKey("SourceTotal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
